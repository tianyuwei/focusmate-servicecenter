<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.focusmate.services.datasource.mapper.StationMapper">
  <resultMap id="BaseResultMap" type="com.focusmate.services.datasource.entities.Station">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="latitude" jdbcType="REAL" property="latitude" />
    <result column="longitude" jdbcType="REAL" property="longitude" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="short_name" jdbcType="VARCHAR" property="shortName" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="command_type" jdbcType="INTEGER" property="commandType" />
    <result column="visit_date" jdbcType="TIMESTAMP" property="visitDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  <choose>
                    <when test="criterion.isBinary">
                      and ${criterion.condition} unhex(#{criterion.value})
                    </when>
                    <otherwise>
                      and ${criterion.condition} #{criterion.value}
                    </otherwise>
                  </choose>
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    <choose>
                      <when test="criterion.isBinary">
                        unhex(#{listItem})
                      </when>
                      <otherwise>
                        #{listItem}
                      </otherwise>
                    </choose>
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  <choose>
                    <when test="criterion.isBinary">
                      and ${criterion.condition} unhex(#{criterion.value})
                    </when>
                    <otherwise>
                      and ${criterion.condition} #{criterion.value}
                    </otherwise>
                  </choose>
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    <choose>
                      <when test="criterion.isBinary">
                        unhex(#{listItem})
                      </when>
                      <otherwise>
                        #{listItem}
                      </otherwise>
                    </choose>
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, address, create_date, latitude, longitude, password, price, short_name, status, 
    user_name, command_type, visit_date
  </sql>
  <select id="selectByExample" parameterType="com.focusmate.services.datasource.entities.StationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from station
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="size != null">
      limit
      <if test="offset != null">
        #{offset},
      </if>
      #{size}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from station
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from station
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.focusmate.services.datasource.entities.StationExample">
    delete from station
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.focusmate.services.datasource.entities.Station">
    insert into station (id, address, create_date, 
      latitude, longitude, password, 
      price, short_name, status, 
      user_name, command_type, visit_date
      )
    values (#{id,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{latitude,jdbcType=REAL}, #{longitude,jdbcType=REAL}, #{password,jdbcType=VARCHAR}, 
      #{price,jdbcType=INTEGER}, #{shortName,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{userName,jdbcType=VARCHAR}, #{commandType,jdbcType=INTEGER}, #{visitDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.focusmate.services.datasource.entities.Station">
    insert into station
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="shortName != null">
        short_name,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="commandType != null">
        command_type,
      </if>
      <if test="visitDate != null">
        visit_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=REAL},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=REAL},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="shortName != null">
        #{shortName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="commandType != null">
        #{commandType,jdbcType=INTEGER},
      </if>
      <if test="visitDate != null">
        #{visitDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.focusmate.services.datasource.entities.StationExample" resultType="java.lang.Integer">
    select count(*) from station
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update station
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.latitude != null">
        latitude = #{record.latitude,jdbcType=REAL},
      </if>
      <if test="record.longitude != null">
        longitude = #{record.longitude,jdbcType=REAL},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=INTEGER},
      </if>
      <if test="record.shortName != null">
        short_name = #{record.shortName,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.commandType != null">
        command_type = #{record.commandType,jdbcType=INTEGER},
      </if>
      <if test="record.visitDate != null">
        visit_date = #{record.visitDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update station
    set id = #{record.id,jdbcType=INTEGER},
      address = #{record.address,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      latitude = #{record.latitude,jdbcType=REAL},
      longitude = #{record.longitude,jdbcType=REAL},
      password = #{record.password,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=INTEGER},
      short_name = #{record.shortName,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      command_type = #{record.commandType,jdbcType=INTEGER},
      visit_date = #{record.visitDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.focusmate.services.datasource.entities.Station">
    update station
    <set>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=REAL},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=REAL},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="shortName != null">
        short_name = #{shortName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="commandType != null">
        command_type = #{commandType,jdbcType=INTEGER},
      </if>
      <if test="visitDate != null">
        visit_date = #{visitDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.focusmate.services.datasource.entities.Station">
    update station
    set address = #{address,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      latitude = #{latitude,jdbcType=REAL},
      longitude = #{longitude,jdbcType=REAL},
      password = #{password,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER},
      short_name = #{shortName,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      command_type = #{commandType,jdbcType=INTEGER},
      visit_date = #{visitDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>