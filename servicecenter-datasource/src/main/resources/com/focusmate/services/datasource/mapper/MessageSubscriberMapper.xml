<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.focusmate.services.datasource.mapper.MessageSubscriberMapper">
    <resultMap id="BaseResultMap" type="com.focusmate.services.datasource.entities.MessageSubscriber">
        <id column="StationId" jdbcType="INTEGER" property="stationId"/>
        <result column="Name" jdbcType="VARCHAR" property="name"/>
        <result column="Queue" jdbcType="VARCHAR" property="queue"/>
        <result column="Topic" jdbcType="VARCHAR" property="topic"/>
        <result column="Status" jdbcType="INTEGER" property="status"/>
        <result column="CreateTime" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="LastModifyTime" jdbcType="TIMESTAMP" property="lastModifyTime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    <choose>
                                        <when test="criterion.isBinary">
                                            and ${criterion.condition} unhex(#{criterion.value})
                                        </when>
                                        <otherwise>
                                            and ${criterion.condition} #{criterion.value}
                                        </otherwise>
                                    </choose>
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        <choose>
                                            <when test="criterion.isBinary">
                                                unhex(#{listItem})
                                            </when>
                                            <otherwise>
                                                #{listItem}
                                            </otherwise>
                                        </choose>
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    <choose>
                                        <when test="criterion.isBinary">
                                            and ${criterion.condition} unhex(#{criterion.value})
                                        </when>
                                        <otherwise>
                                            and ${criterion.condition} #{criterion.value}
                                        </otherwise>
                                    </choose>
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        <choose>
                                            <when test="criterion.isBinary">
                                                unhex(#{listItem})
                                            </when>
                                            <otherwise>
                                                #{listItem}
                                            </otherwise>
                                        </choose>
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    StationId, Name, Queue, Topic, Status, CreateTime, LastModifyTime
  </sql>
    <select id="selectByExample" parameterType="com.focusmate.services.datasource.entities.MessageSubscriberExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from MessageSubscriber
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="size != null">
            limit
            <if test="offset != null">
                #{offset},
            </if>
            #{size}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from MessageSubscriber
        where StationId = #{stationId,jdbcType=INTEGER}
    </select>
    <select id="selectByTransactionId" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        m.StationId, m.Name, m.Queue, m.Topic, m.Status, m.CreateTime, m.LastModifyTime
        from MessageSubscriber m,WxTransaction w
        where m.StationId = w.StationId and w.TranscationId = #{transactionId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from MessageSubscriber
    where StationId = #{stationId,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.focusmate.services.datasource.entities.MessageSubscriberExample">
        delete from MessageSubscriber
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.focusmate.services.datasource.entities.MessageSubscriber">
    insert into MessageSubscriber (StationId, Name, Queue, 
      Topic, Status, CreateTime, 
      LastModifyTime)
    values (#{stationId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{queue,jdbcType=VARCHAR}, 
      #{topic,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{lastModifyTime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="com.focusmate.services.datasource.entities.MessageSubscriber">
        insert into MessageSubscriber
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="stationId != null">
                StationId,
            </if>
            <if test="name != null">
                Name,
            </if>
            <if test="queue != null">
                Queue,
            </if>
            <if test="topic != null">
                Topic,
            </if>
            <if test="status != null">
                Status,
            </if>
            <if test="createTime != null">
                CreateTime,
            </if>
            <if test="lastModifyTime != null">
                LastModifyTime,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="stationId != null">
                #{stationId,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="queue != null">
                #{queue,jdbcType=VARCHAR},
            </if>
            <if test="topic != null">
                #{topic,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastModifyTime != null">
                #{lastModifyTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.focusmate.services.datasource.entities.MessageSubscriberExample"
            resultType="java.lang.Integer">
        select count(*) from MessageSubscriber
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update MessageSubscriber
        <set>
            <if test="record.stationId != null">
                StationId = #{record.stationId,jdbcType=INTEGER},
            </if>
            <if test="record.name != null">
                Name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.queue != null">
                Queue = #{record.queue,jdbcType=VARCHAR},
            </if>
            <if test="record.topic != null">
                Topic = #{record.topic,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null">
                Status = #{record.status,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null">
                CreateTime = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.lastModifyTime != null">
                LastModifyTime = #{record.lastModifyTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update MessageSubscriber
        set StationId = #{record.stationId,jdbcType=INTEGER},
        Name = #{record.name,jdbcType=VARCHAR},
        Queue = #{record.queue,jdbcType=VARCHAR},
        Topic = #{record.topic,jdbcType=VARCHAR},
        Status = #{record.status,jdbcType=INTEGER},
        CreateTime = #{record.createTime,jdbcType=TIMESTAMP},
        LastModifyTime = #{record.lastModifyTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective"
            parameterType="com.focusmate.services.datasource.entities.MessageSubscriber">
        update MessageSubscriber
        <set>
            <if test="name != null">
                Name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="queue != null">
                Queue = #{queue,jdbcType=VARCHAR},
            </if>
            <if test="topic != null">
                Topic = #{topic,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                Status = #{status,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                CreateTime = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastModifyTime != null">
                LastModifyTime = #{lastModifyTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where StationId = #{stationId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.focusmate.services.datasource.entities.MessageSubscriber">
    update MessageSubscriber
    set Name = #{name,jdbcType=VARCHAR},
      Queue = #{queue,jdbcType=VARCHAR},
      Topic = #{topic,jdbcType=VARCHAR},
      Status = #{status,jdbcType=INTEGER},
      CreateTime = #{createTime,jdbcType=TIMESTAMP},
      LastModifyTime = #{lastModifyTime,jdbcType=TIMESTAMP}
    where StationId = #{stationId,jdbcType=INTEGER}
  </update>
</mapper>